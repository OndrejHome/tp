---
- hosts: server
  remote_user: root
  vars:
    kubernetes_version: '1.16.4'
    pod_network: '10.123.0.0/16'
  tasks:
    - name: disable swap in /etc/fstab
      replace:
        path: '/etc/fstab'
        regexp: '^([^#].*?\sswap\s+swap\s+.*)$'
        replace: '# \1'
        backup: True
      notify: runtime disable swap
    - name: create kubernetes YUM repository
      yum_repository:
        name: 'kubernetes'
        description: 'kubernetes'
        baseurl: 'http://yum.kubernetes.io/repos/kubernetes-el7-x86_64'
        gpgcheck: False
        repo_gpgcheck: True
        gpgkey:
          - 'https://packages.cloud.google.com/yum/doc/yum-key.gpg'
          - 'https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg'
    - name: create docker YUM repository
      yum_repository:
        name: 'docker-ce-stable'
        description: 'docker-ce-stable'
        baseurl: 'https://download.docker.com/linux/centos/7/$basearch/stable'
        gpgcheck: True
        gpgkey:
          - 'https://download.docker.com/linux/centos/gpg'
    - name: install docker and kubernetes packages
      package:
        name: [ 'docker-ce-18.06.2.ce', "kubeadm-{{ kubernetes_version }}", "kubelet-{{ kubernetes_version }}", "kubectl-{{ kubernetes_version }}" ]
        state: present
    - name: create docker config directory - /etc/docker
      file:
        path: '/etc/docker'
        state: 'directory'
    - name: copy docker configuration for EL 7
      copy:
        src: daemon.json
        dest: '/etc/docker/daemon.json'
      notify: restart docker
    - name: enable docker service on boot
      service:
        name: 'docker'
        enabled: 'true'
    - name: load br_netfilter module so we can change sysctl values after this
      modprobe:
        name: 'br_netfilter'
        state: present
    - name: configure sysctl for kubernetes CNI (1/2)
      sysctl:
        name: 'net.bridge.bridge-nf-call-iptables'
        value: '1'
    - name: configure sysctl for kubernetes CNI (2/2)
      sysctl:
        name: 'net.bridge.bridge-nf-call-ip6tables'
        value: '1'
    - name: enable kubernetes port (6443/tcp) on firewalld
      firewalld:
        port: '6443/tcp'
        permanent: True
        state: enabled
        immediate: True
    - name: enable kubernetes masquerade on firewalld
      firewalld:
        masquerade: 'yes'
        permanent: True
        state: enabled
        immediate: True
    - name: add hostname of machine to /etc/hosts
      lineinfile:
        dest: '/etc/hosts'
        regexp: "{{ ansible_default_ipv4['address'] }} "
        line: "{{ ansible_default_ipv4['address'] }} {{ ansible_fqdn.split('.')[0] }}"
    - meta: flush_handlers
    - name: generate kubeadm-config.yaml deployment config file
      template:
        src: 'kubeadm-config.yaml.j2'
        dest: '/root/kubeadm-config.yaml'
    - name: Do preflight check for kubernetes deployment
      command: >-
        kubeadm init phase preflight --config /root/kubeadm-config.yaml
    - name: Deploy kubernetes
      command: >-
        kubeadm init --config /root/kubeadm-config.yaml --upload-certs
    - name: create /root/.kube directory for configuration
      file:
        path: '/root/.kube'
        state: directory
    - name: copy kubernetes configuration to /root/.kube
      copy:
        remote_src: True
        src: '/etc/kubernetes/admin.conf'
        dest: '/root/.kube/config'
    - name: generate flannel config file
      template:
        src: 'kube-flannel.yml.j2'
        dest: '/root/kube-flannel.yml'
    - name: add flannel to kubernetes
      command: >-
        kubectl apply -f /root/kube-flannel.yml
    - name: Enable kubelet service
      service:
        name: 'kubelet'
        enabled: True
    - name: allow scheduling of pods on this master node
      command: >-
        kubectl taint nodes {{ ansible_fqdn }} node-role.kubernetes.io/master:NoSchedule-
  handlers:
    - name: runtime disable swap
      command: swapoff -a
    - name: restart docker
      service:
        name: docker
        state: restarted
